from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your features and target variable (e.g., NDVI, soil moisture, and actual yield)
# Example: features = [NDVI, soil_moisture, rainfall]
features = np.array([[0.4, 0.3, 20], [0.7, 0.5, 30], [0.6, 0.4, 25]])  # Replace with actual data
yield_data = np.array([3000, 5000, 4500])  # Replace with actual yield data

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(features, yield_data, test_size=0.2, random_state=42)

# Train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict the yield for the test data
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Predicting yield for new data (new NDVI values)
new_data = np.array([[0.5, 0.35, 22]])  # New NDVI and other variables
predicted_yield = model.predict(new_data)
print(f"Predicted Yield: {predicted_yield}")
